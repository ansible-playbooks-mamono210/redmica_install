---
version: 2.1

executors:
  ansible-lint:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/ansible-lint:latest
    resource_class: small
  molecule-docker:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
  molecule-ec2:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors_molecule/molecule:ec2
    resource_class: medium
  yamllint:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/yamllint:latest
    resource_class: small
  trailing-whitespace:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/trailing-whitespace:latest
    resource_class: small

orbs:
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  ansible-lint:
    executor: ansible-lint
    steps:
      - checkout
      - run:
          name: Install galaxy roles
          command: |
            if [ -f 'roles/requirements.yml' ]; then
              ansible-galaxy install -r roles/requirements.yml
            else
              ansible-galaxy install git+${CIRCLE_REPOSITORY_URL},${CIRCLE_SHA1}
            fi
      - run:
          name: Execulte Ansible-lint
          command: ansible-lint
      - run:
          name: Show Ansible-lint version
          command: |
            pip list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
            ansible-lint --version
  molecule-docker:
    executor: molecule-docker
    parameters:
      checkout-path:
        type: string
      molecule-image:
        type: string
    steps:
      - checkout:
          path: << parameters.checkout-path >>
      - run:
          name: Install Molecule and dependencies
          command: |
            cd << parameters.checkout-path >>
            pip3 install -r molecule/requirements/docker
      - run:
          name: Test with Molecule
          command: |
            cd << parameters.checkout-path >>
            molecule test --scenario-name docker
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_TASK_TIMEOUT: '600'
            MOLECULE_IMAGE: << parameters.molecule-image >>
            PY_COLORS: '1'
          no_output_timeout: 15m
      - store_artifacts:
          path: << parameters.checkout-path >>/molecule/default/files/screenshot.png
          destination: screenshot.png
      - run:
          name: Show Ansible version
          command: |
            pip3 list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
      - run:
          name: Show Molecule version
          command: molecule --version
  molecule-ec2:
    executor: molecule-ec2
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
          role-arn: ${AWS_ROLE_ARN}
          role-session-name: circleci_ansible-playbook_redmica_install
          session-duration: '3600'
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources
          command: |
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")
            VALUE='redmica_install_molecule'
            AUTHOR_EMAIL=$(git show -s --format='%ae' ${CIRCLE_SHA1})

            echo "export CREATED_BY=${AUTHOR_EMAIL}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export PLATFORM_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export TAG_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install required Ansible Collections and roles
          command: |
            ansible-galaxy collection install community.molecule
            ansible-galaxy install -r molecule/vm/requirements.yml
      - run:
          name: Create galaxy dependencies file in 'molecule/vm/'
          command: |
            cp roles/requirements.yml molecule/vm/requirements.yml
      - run:
          name: Test with molecule
          command: |
            molecule test --scenario-name vm
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_TASK_TIMEOUT: '600'
            # AMI_ID: sotred in system environment variables
            # AWS_DEFAULT_REGION: sotred in CircleCI environment variables
            # CREATED_BY: stored in CircleCI environment variables
            # EC2_REGION: stored in CircleCI environment variables
            # KEYPAIR_NAME: sotred in CircleCI environment variables
            # PLATFORM_NAME: sotred in CircleCI environment variables
            PROFILE_TASKS_SORT_ORDER: 'none'
            PROFILE_TASKS_TASK_OUTPUT_LIMIT: '200'
            PY_COLORS: '1'
            # SECURITY_GROUP_NAME: sotred in CircleCI environment variables
            # VPC_SUBNET_ID: sotred in CircleCI environment variables
            TZ: 'Asia/Tokyo'
          no_output_timeout: 15m
      - run:
          name: Show Ansible version
          command: |
            pip list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
            ansible --version
      - run:
          name: Show Molecule version
          command: molecule --version
  yamllint:
    executor: yamllint
    steps:
      - checkout
      - run:
          name: Execute yamllint
          command: yamllint *
      - run:
          name: Show yamllint version
          command: |
            yamllint --version \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'yamllint.* '
  trailing-whitespace:
    executor: trailing-whitespace
    steps:
      - checkout
      - run:
          name: Execute trailing-whitespace
          command: trailing-whitespace

workflows:
  version: 2.1
  redmica-install:
    jobs:
      - trailing-whitespace
      - yamllint:
          requires:
            - trailing-whitespace
      - ansible-lint:
          requires:
            - yamllint
      - molecule-docker:
          matrix:
            parameters:
              checkout-path:
                - 'redmica_install'
              molecule-image:
                - 'ghcr.io/docker-images-mamono210/ansible-test/centos-stream8:latest'
          requires:
            - ansible-lint
      - molecule-ec2:
          context: AWS_OPENID_CONNECT_TOKENS
          requires:
            - ansible-lint
