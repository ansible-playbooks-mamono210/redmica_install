---
version: 2.1

executors:
  trailing-whitespace:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/trailing-whitespace:latest
    resource_class: small

orbs:
  ansible-lint: orbss/ansible-lint@0.0.3
  aws-cli: circleci/aws-cli@3.1.1
  yamllint: orbss/yamllint@0.0.4

jobs:
  ansible-lint:
    executor: ansible-lint/default
    steps:
      - checkout
      - ansible-lint/execute:
          molecule-playbook-test: true
  molecule:
    machine:
      image: ubuntu-2204:2023.10.1
    resource_class: medium
    parameters:
      ansible-user:
        type: string
      aws-ami-name:
        type: string
      aws-ami-owner-id:
        type: string
      aws-instance-type:
        type: string
      aws-resource-name:
        type: string
      aws-session-duration:
        type: string
      aws-vpc-subnet-id:
        type: string
      circleci-timeout:
        type: string
      molecule-scenario-name:
        type: string
        default: default
    steps:
      - checkout
      - aws-cli/setup
      - aws-cli/setup:
          profile-name: default
          role-arn: ${AWS_ROLE_ARN}
          role-session-name: << parameters.aws-resource-name >>
          session-duration: << parameters.aws-session-duration >>
      - run:
          name: Install Molecule and dependencies
          command: |
            pip3 install -r molecule/requirements.txt
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources
          command: |
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")
            VALUE="<< parameters.aws-resource-name >>"
            AUTHOR_EMAIL=$(git show -s --format='%ae' ${CIRCLE_SHA1})

            echo "export CREATED_BY=${AUTHOR_EMAIL}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export PLATFORM_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            echo "export TAG_NAME=${VALUE}_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Show Ansible version
          command: |
            pip3 list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
      - run:
          name: Show Molecule version
          command: molecule --version
      - run:
          name: Install required Ansible roles
          command: |
            ansible-galaxy install -r molecule/default/requirements.yml
      - run:
          name: Test with Molecule
          command: |
            molecule test --scenario-name << parameters.molecule-scenario-name >>
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_USER: << parameters.ansible-user >>
            AMI_NAME: << parameters.aws-ami-name >>
            AMI_OWNER_ID: << parameters.aws-ami-owner-id >>
            INSTANCE_TYPE: << parameters.aws-instance-type >>
            PY_COLORS: '1'
            VPC_SUBNET_ID: << parameters.aws-vpc-subnet-id >>
          no_output_timeout: << parameters.circleci-timeout >>
      - store_artifacts:
          path: molecule/<< parameters.molecule-scenario-name >>/files/screenshot.png
          destination: screenshot.<< parameters.molecule-scenario-name >>.png
  yamllint:
    executor: yamllint/default
    steps:
      - checkout
      - yamllint/execute
  trailing-whitespace:
    executor: trailing-whitespace
    steps:
      - checkout
      - run:
          name: Execute trailing-whitespace
          command: trailing-whitespace

workflows:
  version: 2.1
  redmica-install:
    jobs:
      - trailing-whitespace
      - yamllint:
          requires:
            - trailing-whitespace
      - ansible-lint:
          requires:
            - yamllint
      - molecule:
          ansible-user: 'ec2-user'
          aws-ami-name: 'centos-stream9-1*'
          aws-ami-owner-id: '808683561341'
          aws-instance-type: 't2.medium'
          aws-resource-name: 'circleci_ansible-playbook_rm_install_cs9'
          aws-session-duration: '3600'
          aws-vpc-subnet-id: 'subnet-022a704b3061b8b39'
          circleci-timeout: '30m'
          molecule-scenario-name: 'default'
          context: AWS_OPENID_CONNECT_TOKENS
          requires:
            - ansible-lint
